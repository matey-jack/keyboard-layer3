https://beatworm.co.uk/blog/keyboards/gnome-wayland-xkb


Use legacy X11 for testing your xkb configuration, because Gnome + Wayland does not have a way
of dynamic reload of config!

for his use-case, no further deep understanding of anything was required. And to develop on X11 a great tip!!

xkb-options might just be the right place to define my left AltGr and some other Layer 3 basics â€“ like shift on Caps.



Notable Quotes:
> Even thought it's X.org now, not XFree86, and Xmodmap is heavily deprecated in favour of the XKeyboard 
and Xinput extensions, using the GNOME configurator and then some of my old Xmodmap ways, I could make this 
go away, and map ALTGR to a right meta, ALT to a left meta and the windows and menu key to SUPER and HYPER.

> And then GNOME 3.22 switched to Wayland as a display server, rather than X. And this year's Debian defaulted to this. 
Even though there is an X11 compatibility layer, GTK+ and GNOME on Wayland do not talk to X11 directly for mediated 
key events any more, and this meant that Xmodmap can't be used to universally set modifier maps. GNOME 3 on wayland 
will still use xkb for key configurations, and this meant another fourteen hours of fiddling about in order to come 
up with a keyboard scheme that works for both GNOME and legacy X using the XKeyboard extension (XKB). This was not 
made any easier by the fact that all the attempts to search for information on this get bogged down in legacy 
explanations about Xmodmap or how to enable XKB for X11.
